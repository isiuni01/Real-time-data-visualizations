# Telegraf agent configuration
[agent]
  interval = "500ms"
  flush_interval = "500ms"
  debug = true
  hostname = "telegraf-boat"  # opzionale, ma utile nei tag

###############################################################################
# INPUT PLUGIN - Kafka consumer
###############################################################################

[[inputs.kafka_consumer]]
  name_override = "navigazione"
  brokers = ["kafka:19091"]
  topics = ["boat_data_navigation"]
  consumer_group = "telegraf-boat-group"
  client_id = "telegraf-boat-client"
  offset = "oldest"
  max_message_len = 1000000
  data_format = "json"

  # Timestamp per InfluxDB
  json_time_key = "timestamp"
  json_time_format = "RFC3339"

  # Tag: trattati come identificatori (testi)
  tag_keys = ["boat"]

[[inputs.kafka_consumer]]
  name_override = "BoatvsBoat"
  brokers = ["kafka:19091"]
  topics = ["boat_race_data"]
  consumer_group = "telegraf-boat-group"
  client_id = "telegraf-boat-client"
  offset = "oldest"
  max_message_len = 1000000
  data_format = "json"

  # Timestamp per InfluxDB
  json_time_key = "timestamp"
  json_time_format = "RFC3339"

  # Tag: trattati come identificatori (testi)
  tag_keys = ["boat", "race_number", "opponent"]


###############################################################################
# OUTPUT PLUGIN - InfluxDB v2
###############################################################################

[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "dBJ2aNAEWZPLA6zcqF69YyGE0GjrkgPaNC_E2Y5jRA4hjJYQ47eXg1LhFNgTxNWPv3hLjavShTA7MS-DoehPIQ=="
  organization = "my-org"
  bucket = "Navigation"

###############################################################################
# OUTPUT PLUGIN - Prometheus Client
###############################################################################

[[outputs.prometheus_client]]
  ## Address to listen on
  listen = ":9273"
  
  ## Metric version controls the mapping from Telegraf metrics into
  ## Prometheus format. Version 2 is recommended as it is closer to the
  ## Prometheus data model.
  metric_version = 2
  
  ## Path to publish the metrics on
  path = "/metrics"
  
  ## Expiration interval for each metric
  expiration_interval = "60s"
  
  ## Send string metrics as Prometheus labels
  string_as_label = true


