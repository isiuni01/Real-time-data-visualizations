services:
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    ports:
      - "9091:9091"
      - "9308:9308"  # JMX metrics port
    environment:
      KAFKA_LISTENERS: INTERNAL://kafka:19091,EXTERNAL://0.0.0.0:9091
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19091,EXTERNAL://localhost:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # JMX configuration for Prometheus
      KAFKA_JMX_HOSTNAME: kafka
      KAFKA_JMX_PORT: 9999
      KAFKA_OPTS: "-javaagent:/opt/jmx_prometheus_javaagent.jar=9308:/opt/kafka-jmx-config.yml"
    volumes:
      - kafka-data:/var/lib/kafka/data
      - ./jmx_prometheus_javaagent.jar:/opt/jmx_prometheus_javaagent.jar:ro
      - ./kafka-jmx-config.yml:/opt/kafka-jmx-config.yml:ro
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    volumes:
      - zookeeper-data:/data
      - zookeeper-datalog:/datalog

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:19091"
    depends_on:
      - kafka

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_INSTALL_PLUGINS=hamedkarbasi93-kafka-datasource
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=hamedkarbasi93-kafka-datasource
      - GF_LOG_LEVEL=debug
      - GF_PLUGINS_ENABLE_ALPHA=true
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - kafka
      - kafdrop
      - zookeeper

  influxdb:
    image: influxdb:2.7
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin2025
      - DOCKER_INFLUXDB_INIT_ORG=my-org
      - DOCKER_INFLUXDB_INIT_BUCKET=flink-data
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-super-token
      - INFLUXD_REPORTING_DISABLED=false
    volumes:
      - influxdb-storage:/var/lib/influxdb2

  telegraf:
    image: telegraf:1.30
    ports:
      - "9273:9273"  # Prometheus metrics port
    depends_on:
      - kafka
      - influxdb
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    depends_on:
      - kafka
      - grafana

    
  jobmanager:
    image: myflink
    ports:
      - "8081:8081"
      - "9249:9249"  # Prometheus metrics port
    command: jobmanager
    volumes:
      - ./flink-conf.yaml:/opt/flink/conf/config.yaml:ro
   

  taskmanager:
    image: myflink
    depends_on:
      - jobmanager
    command: taskmanager
    scale: 1
    ports:
      - "9250:9249"  # Prometheus metrics port (different from jobmanager)
    volumes:
      - ./flink-conf.yaml:/opt/flink/conf/config.yaml:ro


  sql-client:
    image: myflink
    command: bin/sql-client.sh
    depends_on:
      - jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        rest.address: jobmanager

volumes:
  grafana-storage:
  kafka-data:
  zookeeper-data:
  zookeeper-datalog:
  influxdb-storage:
  prometheus-data:
